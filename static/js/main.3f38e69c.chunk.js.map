{"version":3,"sources":["App.js","index.js"],"names":["App","useState","inputVal","setinputVal","operator","setOperator","perv","setPerv","useEffect","document","title","className","type","id","value","readOnly","NumButton","number","ClearButton","PlusButton","MinusButton","TimesButton","DivideButton","EqualButton","probs","dot_count","onClick","console","log","String","parseFloat","newVal","ReactDom","render","getElementById"],"mappings":"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","file":"static/js/main.3f38e69c.chunk.js","sourcesContent":["import React, { useState , useEffect} from \"react\";\nimport \"./index.css\"\n\n\n\nfunction App() {\n    const [inputVal , setinputVal] = useState(\"0\")\n    const [operator , setOperator] = useState(\"\")\n    const [perv , setPerv] = useState(\"0\")\n    useEffect(() => document.title=\"calculator\" , [])\n  return (\n    <div className=\"app\">\n          <div className=\"inpt\">\n                <input type=\"number/text\"  id=\"inp\" value={inputVal} readOnly={true}/>\n          </div>\n          <section className=\"btns\">\n            <NumButton number={1}/>\n            <NumButton number={2}/>\n            <NumButton number={3}/>\n            <NumButton number={4}/>\n            <NumButton number={5}/>\n            <NumButton number={6}/>\n            <NumButton number={7}/>\n            <NumButton number={8}/>\n            <NumButton number={9}/>\n            <NumButton number={0}/>\n            <ClearButton/>\n            <NumButton number={\".\"}/>\n            <PlusButton/>\n            <MinusButton/>\n            <TimesButton/>\n            <DivideButton/>\n            <EqualButton/>\n          </section>\n    </div>\n  )\n\n  function NumButton(probs) {\n      var dot_count = 0\n    function clicked() {\n        for(var number of inputVal ){\n            if(number === \".\"){ dot_count++}\n        }\n\n        if(inputVal === \"0\"){\n            if(probs.number === \".\"){\n                console.log(\"sot\")\n                if(dot_count < 1){\n                setinputVal( String(inputVal + \".\") )\n            }\n\n            }\n            else{\n                if(probs.number === \".\"){\n                    if(dot_count < 1){\n                    setinputVal( String(inputVal + \".\") )\n                    }  \n                }\n                  \n                else{setinputVal(String(probs.number))}\n            }\n        }\n        else{\n            if(probs.number === \".\"){\n                    if(dot_count < 1){\n                    setinputVal( String(inputVal + \".\") )\n                    }  \n                }\n            else{\n            setinputVal(inputVal + probs.number)}\n        }\n    }\n\n    \n\n    return (\n        <button className=\"btn\" onClick={clicked}>\n            {probs.number}\n        </button>\n    )\n}\n\nfunction ClearButton(){\n    \n    const Clear = () =>{\n        setPerv(\"0\")\n        setinputVal(\"0\")\n    }\n\n    return(\n        <button className=\"btn\" id=\"clearbtn\" onClick={Clear}>\n            C\n        </button>\n    )\n}\n\nfunction PlusButton(){\n    \n    const doplus = () => {\n        if(perv === \"0\"){\n        setPerv(inputVal)\n        setinputVal(\"0\")\n        setOperator(\"+\")}\n        else{\n            setPerv(String(parseFloat(perv) + parseFloat(inputVal)))\n            setinputVal(\"0\")\n        }\n    }\n\n    return(\n        <button className=\"btn\" onClick={doplus}> + </button>\n    )\n}\n\n\nfunction TimesButton(){\n\n    function doTimes(){\n        if(perv === \"0\"){\n        setPerv(inputVal)\n        setinputVal(\"0\")\n        setOperator(\"*\")}\n        else{\n            setPerv(String(parseFloat(perv) * parseFloat(inputVal)))\n            setinputVal(\"0\")\n        }\n    }\n\n\n    return(\n        <button className=\"btn\" onClick={doTimes}> * </button>\n    )\n}\n\nfunction DivideButton(){\n    function doTimes(){\n        if(perv === \"0\"){\n        setPerv(inputVal)\n        setinputVal(\"0\")\n        setOperator(\"/\")}\n        else{\n            setPerv(String(parseFloat(perv) / parseFloat(inputVal)))\n            setinputVal(\"0\")\n        }\n    }\n\n\n    return(\n        <button className=\"btn\" onClick={doTimes}> / </button>\n    )\n}\n\nfunction MinusButton(){\n    function doMinus(){\n        if(perv === \"0\"){\n        setPerv(inputVal)\n        setinputVal(\"0\")\n        setOperator(\"-\")}\n        else{\n            setPerv(String(parseFloat(perv) - parseFloat(inputVal)))\n            setinputVal(\"0\")\n        }\n    }\n\n\n    return(\n        <button className=\"btn\" onClick={doMinus}> - </button>\n    )\n}\n\nfunction EqualButton(){\n    function __eq__(){\n        if(operator === \"+\"){\n            var newVal = String(parseFloat(perv) + parseFloat(inputVal))\n            setinputVal(newVal)\n        }\n\n        else if(operator === \"*\"){\n            var newVal = String(parseFloat(perv) * parseFloat(inputVal))\n            setinputVal(newVal)\n        }\n        else if(operator === \"/\"){\n            var newVal = String(parseFloat(perv) / parseFloat(inputVal))\n            setinputVal(newVal)\n        }\n        else if(operator === \"-\"){\n            var newVal = String(parseFloat(perv) - parseFloat(inputVal))\n            setinputVal(newVal)\n        }\n    }\n\n    return(\n        <button className=\"btn\" onClick={__eq__} id=\"eq_btn\"> = </button>\n    )\n}\n\n\n\n\n}\nexport default App;\n","import App from \"./App\";\nimport React from \"react\"\nimport ReactDom from \"react-dom\";\n\nReactDom.render(<App />, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}